
import { AEAD } from '../crypto/aead';
import { QTLS } from '../crypto/qtls';
import { Connection } from '../quicker/connection';
import { EndpointType } from '../types/endpoint.type';
import { Socket, createSocket, SocketType } from 'dgram';
import { Version, ConnectionID } from '../packet/header/header.properties';

// This is an async test, so run directly from commandline : 
// ../../nodejs/trunk/out/Release/node ./out/tests/test.aead.cleartext.vector.js 127.0.0.1 4433
export class TestAeaedCleartextVector  {

    public static execute() {
        let result:boolean = false;


        // test vector from draft-20 : https://tools.ietf.org/html/draft-ietf-quic-tls-20#appendix-A
        let connectionID = new ConnectionID( Buffer.from("8394c8f03e515708", "hex"), "8394c8f03e515708".length / 2 );

        let socket = createSocket( "udp4" );
        socket.bind(undefined, undefined);

        /*
        let onSocketBound = () => {
            var remoteInfo: RemoteInformation = {
                address: this.hostname,
                port: this.port,
                family: family
            };
    
            this.connection = new Connection(remoteInfo, EndpointType.Client, socket, ConnectionID.randomConnectionID(), this.options);
            this.connection.setSrcConnectionID(ConnectionID.randomConnectionID());
            this.setupConnectionEvents();
    
            socket.on(QuickerEvent.ERROR, (err) => { this.handleError(this.connection, err) });
            socket.on(QuickerEvent.NEW_MESSAGE, (msg, rinfo) => { this.onMessage(msg) });

            onSocketReady();
        }
        */

        // TODO: allow top-level user to specify an address and port to bind client socket on 
        // look at how Node's HTTP client typically does this 

        setTimeout( () => {

            let qtls:QTLS = new QTLS(true, {}, new Connection({address: "127.0.0.1", port: 1234, family: ""}, EndpointType.Server, socket, connectionID ));
            let aead:AEAD = new AEAD(qtls);

            aead.generateClearTextSecrets( connectionID, qtls, new Version( Buffer.from("ff000014", "hex")) ); 

            console.log("Need to manually compare the output above from AEAD with what's printed below (taaken from https://tools.ietf.org/html/draft-ietf-quic-tls-20#appendix-A)");
    
            let compareTo = `
            The labels generated by the HKDF-Expand-Label function are:
    
            client in:  00200f746c73313320636c69656e7420696e00
    
            server in:  00200f746c7331332073657276657220696e00
    
            quic key:  00100e746c7331332071756963206b657900
    
            quic iv:  000c0d746c733133207175696320697600
    
            quic hp:  00100d746c733133207175696320687000
    
            The initial secret is common:
    
            initial_secret = HKDF-Extract(initial_salt, cid)
                = 4496d3903d3f97cc5e45ac5790ddc686
                    683c7c0067012bb09d900cc21832d596
    
            The secrets for protecting client packets are:
            
            client_initial_secret
           = HKDF-Expand-Label(initial_secret, "client in", _, 32)
           = 8a3515a14ae3c31b9c2d6d5bc58538ca
             5cd2baa119087143e60887428dcb52f6
    
            key = HKDF-Expand-Label(client_initial_secret, "quic key", _, 16)
                = 98b0d7e5e7a402c67c33f350fa65ea54
    
            iv  = HKDF-Expand-Label(client_initial_secret, "quic iv", _, 12)
                = 19e94387805eb0b46c03a788
    
            hp  = HKDF-Expand-Label(client_initial_secret, "quic hp", _, 16)
                = 0edd982a6ac527f2eddcbb7348dea5d7
    
            The secrets for protecting server packets are:
    
            server_initial_secret
                = HKDF-Expand-Label(initial_secret, "server in", _, 32)
                = 47b2eaea6c266e32c0697a9e2a898bdf
                    5c4fb3e5ac34f0e549bf2c58581a3811
    
            key = HKDF-Expand-Label(server_initial_secret, "quic key", _, 16)
                = 9a8be902a9bdd91d16064ca118045fb4
    
            iv  = HKDF-Expand-Label(server_initial_secret, "quic iv", _, 12)
                = 0a82086d32205ba22241d8dc
    
            hp  = HKDF-Expand-Label(server_initial_secret, "quic hp", _, 16)
                = 94b9452d2b3c7c7f6da7fdd8593537fd
            
            `;
    
            console.log(compareTo);

            process.exit(666);

        }, 1000);
    }
}

TestAeaedCleartextVector.execute();